{"version":3,"sources":["webpack:///./scripts/slider.js","webpack:///./index.js"],"names":["sliderView","document","querySelector","slider","sliderWidth","offsetWidth","sliderWrapper","slideWidth","slidesArr","querySelectorAll","serviceSection","partnerSection","style","height","rect","scrollLeft","scrollTop","divOffset","getBoundingClientRect","window","pageXOffset","documentElement","pageYOffset","top","left","currentSlide","sliderShouldMoveLeft","moveToBottomSection","sliderShouldMoveRight","moveToTopSection","lastScrollTop","shouldSliderScroll","scrollEvent","st","setTimeout","length","scroll","offsetHeight","maxMargin","marginLeft","swipeLeft","console","log","IntersectionObserver","entries","observer","forEach","ent","isIntersecting","addEventListener","removeEventListener","threshold","observe","en","trashold"],"mappings":"8EAAA,MAAMA,EAAaC,SAASC,cAAc,cACpCC,EAASF,SAASC,cAAc,WAChCE,EAAcD,EAAOE,YACrBC,EAAgBL,SAASC,cAAc,mBACvCK,EAAaN,SAASC,cAAc,gBAAgBG,YACpDG,EAAYP,SAASQ,iBAAiB,gBACtCC,EAAiBT,SAASC,cAAc,qBACxCS,EAAiBV,SAASC,cAAc,mBAC9CI,EAAcM,MAAMC,OAAiC,IAArBV,EAAOE,YAAT,KAS9B,IANMS,EACFC,EACAC,EAIAC,GANEH,EAMiBR,EANPY,wBACZH,EAAaI,OAAOC,aAAenB,SAASoB,gBAAgBN,WAC5DC,EAAYG,OAAOG,aAAerB,SAASoB,gBAAgBL,UACtD,CAAEO,IAAKT,EAAKS,IAAMP,EAAWQ,KAAMV,EAAKU,KAAOT,IAKxD,IAAIU,EAAe,EACfC,GAAuB,EACvBC,GAAsB,EACtBC,GAAwB,EAqB5B,IAAIC,GAAmB,EAqBvB,IAAIC,EAAgB,EAChBC,GAAqB,EAEzB,SAASC,IACP,IAAIC,EAAKd,OAAOG,aAAerB,SAASoB,gBAAgBL,UACpDiB,EAAKH,EACHC,IA/CU,MAChBG,WAAW,KACTR,GAAuB,EACnBA,GACED,EAAejB,EAAU2B,OAAS,IACpCV,IACAE,GAAsB,IAGzB,GACCF,IAAiBjB,EAAU2B,OAAS,GAAKR,IAC3CR,OAAOiB,OAAO,EAAGnB,EAAUM,IAAMjB,EAAc+B,aAAe,MAC9DV,GAAsB,GAExB,MAAMW,EAAYlC,EAAcJ,EAAWK,YAC3CoB,EAAejB,EAAU2B,OAAS,EAC7BhC,EAAOS,MAAM2B,WAAc,IAAGhC,EAAakB,MAC3CtB,EAAOS,MAAM2B,WAAc,IAAGD,OA+B/BE,GACAT,GAAqB,EACrBG,WAAW,IAAOH,GAAqB,EAAO,MAEvCE,GAAMH,GACXC,IA/BNU,QAAQC,IAAI,cACZR,WAAW,KACTN,GAAwB,GACvB,GACCA,GACEH,EAAe,IACjBA,IACAI,GAAmB,EACnB1B,EAAOS,MAAM2B,WAAc,IAAGhC,EAAakB,OAG1B,IAAjBA,GACEI,IACFA,GAAmB,EACnBV,OAAOiB,OAAO,EAAGnB,EAAUM,IAAgC,EAA1BvB,EAAWqC,eAmB5CN,GAAqB,EACrBG,WAAW,IAAOH,GAAqB,EAAO,MAGlDD,EAAgBG,GAAM,EAAI,EAAIA,EAMf,IAAIU,sBAAqB,SAAUC,EAASC,GAC3DD,EAAQE,QAASC,IACXA,EAAIC,eACN7B,OAAO8B,iBAAiB,SAAUjB,GAElCb,OAAO+B,oBAAoB,SAAUlB,OAR7B,CACZmB,UAAW,IAWJC,QAAQpD,GAKQ,IAAI2C,sBAAqB,SAAUI,GAC1DA,EAAID,QAASO,IACPA,EAAGL,iBACLtB,GAAuB,EACvBD,EAAe,EACftB,EAAOS,MAAM2B,WAAa,WARH,CAC3Be,SAAU,KAWKF,QAAQ1C,GAKF,IAAIiC,sBAAqB,SAAUI,GACxDA,EAAID,QAASO,IACX,MAAMf,EAAYlC,EAAcJ,EAAWK,YACvCgD,EAAGL,iBACLpB,GAAwB,EACxBzB,EAAOS,MAAM2B,WAAc,IAAGD,MAC9Bb,EAAejB,EAAU2B,OAAS,OATT,CAC7BmB,SAAU,KAYGF,QAAQzC,I,yDC9HvB,sC","file":"main.7675ac9c91839ecb1e20.js","sourcesContent":["const sliderView = document.querySelector(\".view_port\");\nconst slider = document.querySelector(\".slider\");\nconst sliderWidth = slider.offsetWidth;\nconst sliderWrapper = document.querySelector(\".slider_wrapper\");\nconst slideWidth = document.querySelector(\".slider_item\").offsetWidth;\nconst slidesArr = document.querySelectorAll(\".slider_item\");\nconst serviceSection = document.querySelector(\".services_section\");\nconst partnerSection = document.querySelector(\".parter_section\");\nsliderWrapper.style.height = `${slider.offsetWidth * 3.5}px`;\n\nfunction offset(el) {\n  var rect = el.getBoundingClientRect(),\n    scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\n    scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\n}\n\nvar divOffset = offset(sliderWrapper);\n\nlet currentSlide = 0;\nlet sliderShouldMoveLeft = false;\nlet moveToBottomSection = true;\nlet sliderShouldMoveRight = false;\nconst swipeLeft = () => {\n  setTimeout(() => {\n    sliderShouldMoveLeft = true;\n    if (sliderShouldMoveLeft) {\n      if (currentSlide < slidesArr.length - 1) {\n        currentSlide++;\n        moveToBottomSection = true;\n      }\n    }\n  }, 0);\n  if (currentSlide === slidesArr.length - 1 && moveToBottomSection) {\n    window.scroll(0, divOffset.top + sliderWrapper.offsetHeight / 1.11);\n    moveToBottomSection = false;\n  }\n  const maxMargin = sliderWidth - sliderView.offsetWidth;\n  currentSlide < slidesArr.length - 1\n    ? (slider.style.marginLeft = `-${slideWidth * currentSlide}px`)\n    : (slider.style.marginLeft = `-${maxMargin}px`);\n};\n\nlet moveToTopSection = true;\nconst swipeRight = () => {\n  console.log(\"swipeRight\");\n  setTimeout(() => {\n    sliderShouldMoveRight = true;\n  }, 0);\n  if (sliderShouldMoveRight) {\n    if (currentSlide > 0) {\n      currentSlide--;\n      moveToTopSection = true;\n      slider.style.marginLeft = `-${slideWidth * currentSlide}px`;\n    }\n  }\n  if (currentSlide === 0) {\n    if (moveToTopSection) {\n      moveToTopSection = false;\n      window.scroll(0, divOffset.top + sliderView.offsetHeight * 2);\n    }\n  }\n};\n\nlet lastScrollTop = 0;\nlet shouldSliderScroll = true;\n\nfunction scrollEvent() {\n  let st = window.pageYOffset || document.documentElement.scrollTop;\n  if (st > lastScrollTop) {\n    if (shouldSliderScroll) {\n      swipeLeft();\n      shouldSliderScroll = false;\n      setTimeout(() => (shouldSliderScroll = true), 850);\n    }\n  } else if (st <= lastScrollTop) {\n    if (shouldSliderScroll) {\n      swipeRight();\n      shouldSliderScroll = false;\n      setTimeout(() => (shouldSliderScroll = true), 850);\n    }\n  }\n  lastScrollTop = st <= 0 ? 0 : st;\n}\n\nlet options = {\n  threshold: 1,\n};\nconst observer = new IntersectionObserver(function (entries, observer) {\n  entries.forEach((ent) => {\n    if (ent.isIntersecting) {\n      window.addEventListener(\"scroll\", scrollEvent);\n    } else {\n      window.removeEventListener(\"scroll\", scrollEvent);\n    }\n  });\n}, options);\nobserver.observe(sliderView);\n\nlet trasholdOprtionsForTop = {\n  trashold: 0.1,\n};\nconst setSliderToBegin = new IntersectionObserver(function (ent) {\n  ent.forEach((en) => {\n    if (en.isIntersecting) {\n      sliderShouldMoveLeft = false;\n      currentSlide = 0;\n      slider.style.marginLeft = \"0px\";\n    }\n  });\n}, trasholdOprtionsForTop);\nsetSliderToBegin.observe(serviceSection);\n\nlet trasholdOptionsForBottom = {\n  trashold: 0.1,\n};\nconst setSliderToEnd = new IntersectionObserver(function (ent) {\n  ent.forEach((en) => {\n    const maxMargin = sliderWidth - sliderView.offsetWidth;\n    if (en.isIntersecting) {\n      sliderShouldMoveRight = false;\n      slider.style.marginLeft = `-${maxMargin}px`;\n      currentSlide = slidesArr.length - 1;\n    }\n  });\n}, trasholdOptionsForBottom);\nsetSliderToEnd.observe(partnerSection);\n","import \"./styles.css\";\nimport \"./styles/home.scss\";\nimport \"./scripts/slider\";\n"],"sourceRoot":""}